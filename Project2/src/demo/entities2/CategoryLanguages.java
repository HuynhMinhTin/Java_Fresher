package demo.entities2;
// Generated Apr 9, 2017 12:19:27 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CategoryLanguages generated by hbm2java
 */
@Entity
@Table(name = "category_languages", catalog = "myProject")
public class CategoryLanguages implements java.io.Serializable {

	private CategoryLanguagesId id;
	private Categories categories;
	private Languages languages;
	private String name;

	public CategoryLanguages() {
	}

	public CategoryLanguages(CategoryLanguagesId id, Categories categories, Languages languages, String name) {
		this.id = id;
		this.categories = categories;
		this.languages = languages;
		this.name = name;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "languageId", column = @Column(name = "languageID", nullable = false, length = 10)),
			@AttributeOverride(name = "categoryId", column = @Column(name = "categoryID", nullable = false)) })
	public CategoryLanguagesId getId() {
		return this.id;
	}

	public void setId(CategoryLanguagesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoryID", nullable = false, insertable = false, updatable = false)
	public Categories getCategories() {
		return this.categories;
	}

	public void setCategories(Categories categories) {
		this.categories = categories;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "languageID", nullable = false, insertable = false, updatable = false)
	public Languages getLanguages() {
		return this.languages;
	}

	public void setLanguages(Languages languages) {
		this.languages = languages;
	}

	@Column(name = "name", nullable = false, length = 500)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

}
