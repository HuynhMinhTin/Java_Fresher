package demo.entities;
// Generated Mar 24, 2017 8:25:56 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.*;

import org.hibernate.validator.constraints.NotEmpty;

/**
 * Accounts generated by hbm2java
 */
@Entity
@Table(name = "accounts", catalog = "myProject")
public class Accounts implements java.io.Serializable {

	private int id;
	private Roles roles;
	@NotEmpty(message = "Please enter your name.")
	@Size(min=2, max=30)
	private String userNames;
	private boolean status;
	@NotEmpty(message = "Please enter your password.")
	@Size(min=2, max=30)
	
	private String passwords;
	@NotNull
	@Min(1)
	@Max(100)
	
	private Integer score;
	private Set<Orders> orderses = new HashSet<Orders>(0);

	public Accounts() {
	}

	public Accounts(int id, Roles roles, String userNames, boolean status, String passwords) {
		this.id = id;
		this.roles = roles;
		this.userNames = userNames;
		this.status = status;
		this.passwords = passwords;
	}

	public Accounts(int id, Roles roles, String userNames, boolean status, String passwords, Integer score,
			Set<Orders> orderses) {
		this.id = id;
		this.roles = roles;
		
		this.userNames = userNames;
		this.status = status;
		
		this.passwords = passwords;
		this.score = score;
		this.orderses = orderses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_Role", nullable = false)
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@Column(name = "user_names", nullable = false, length = 20)
	public String getUserNames() {
		return this.userNames;
	}

	public void setUserNames(String userNames) {
		this.userNames = userNames;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@Column(name = "passwords", nullable = false, length = 20)
	public String getPasswords() {
		return this.passwords;
	}

	public void setPasswords(String passwords) {
		this.passwords = passwords;
	}

	@Column(name = "score")
	public Integer getScore() {
		return this.score;
	}

	public void setScore(Integer score) {
		this.score = score;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

}
